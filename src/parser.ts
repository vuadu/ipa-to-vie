/* eslint-disable */

const peggyParser: { parse: any; SyntaxError: any; DefaultTracer?: any } = // Generated by Peggy 3.0.2.
  //
  // https://peggyjs.org/
  // @ts-ignore
  (function () {
    // @ts-ignore
    "use strict";

    // @ts-ignore
    function peg$subclass(child, parent) {
      // @ts-ignore
      function C() {
        this.constructor = child;
      }
      // @ts-ignore
      C.prototype = parent.prototype;
      // @ts-ignore
      child.prototype = new C();
    }

    // @ts-ignore
    function peg$SyntaxError(message, expected, found, location) {
      // @ts-ignore
      var self = Error.call(this, message);
      // istanbul ignore next Check is a necessary evil to support older environments
      // @ts-ignore
      if (Object.setPrototypeOf) {
        // @ts-ignore
        Object.setPrototypeOf(self, peg$SyntaxError.prototype);
      }
      // @ts-ignore
      self.expected = expected;
      // @ts-ignore
      self.found = found;
      // @ts-ignore
      self.location = location;
      // @ts-ignore
      self.name = "SyntaxError";
      // @ts-ignore
      return self;
    }

    // @ts-ignore
    peg$subclass(peg$SyntaxError, Error);

    // @ts-ignore
    function peg$padEnd(str, targetLength, padString) {
      // @ts-ignore
      padString = padString || " ";
      // @ts-ignore
      if (str.length > targetLength) {
        return str;
      }
      // @ts-ignore
      targetLength -= str.length;
      // @ts-ignore
      padString += padString.repeat(targetLength);
      // @ts-ignore
      return str + padString.slice(0, targetLength);
    }

    // @ts-ignore
    peg$SyntaxError.prototype.format = function (sources) {
      // @ts-ignore
      var str = "Error: " + this.message;
      // @ts-ignore
      if (this.location) {
        // @ts-ignore
        var src = null;
        // @ts-ignore
        var k;
        // @ts-ignore
        for (k = 0; k < sources.length; k++) {
          // @ts-ignore
          if (sources[k].source === this.location.source) {
            // @ts-ignore
            src = sources[k].text.split(/\r\n|\n|\r/g);
            // @ts-ignore
            break;
          }
        }
        // @ts-ignore
        var s = this.location.start;
        // @ts-ignore
        var offset_s =
          this.location.source &&
          typeof this.location.source.offset === "function"
            ? // @ts-ignore
              this.location.source.offset(s)
            : // @ts-ignore
              s;
        // @ts-ignore
        var loc =
          this.location.source + ":" + offset_s.line + ":" + offset_s.column;
        // @ts-ignore
        if (src) {
          // @ts-ignore
          var e = this.location.end;
          // @ts-ignore
          var filler = peg$padEnd("", offset_s.line.toString().length, " ");
          // @ts-ignore
          var line = src[s.line - 1];
          // @ts-ignore
          var last = s.line === e.line ? e.column : line.length + 1;
          // @ts-ignore
          var hatLen = last - s.column || 1;
          // @ts-ignore
          str +=
            "\n --> " +
            loc +
            "\n" +
            // @ts-ignore
            filler +
            " |\n" +
            // @ts-ignore
            offset_s.line +
            " | " +
            line +
            "\n" +
            // @ts-ignore
            filler +
            " | " +
            peg$padEnd("", s.column - 1, " ") +
            // @ts-ignore
            peg$padEnd("", hatLen, "^");
          // @ts-ignore
        } else {
          // @ts-ignore
          str += "\n at " + loc;
        }
      }
      // @ts-ignore
      return str;
    };

    // @ts-ignore
    peg$SyntaxError.buildMessage = function (expected, found) {
      // @ts-ignore
      var DESCRIBE_EXPECTATION_FNS = {
        // @ts-ignore
        literal: function (expectation) {
          // @ts-ignore
          return '"' + literalEscape(expectation.text) + '"';
        },

        // @ts-ignore
        class: function (expectation) {
          // @ts-ignore
          var escapedParts = expectation.parts.map(function (part) {
            // @ts-ignore
            return Array.isArray(part)
              ? // @ts-ignore
                classEscape(part[0]) + "-" + classEscape(part[1])
              : // @ts-ignore
                classEscape(part);
          });

          // @ts-ignore
          return (
            "[" +
            (expectation.inverted ? "^" : "") +
            escapedParts.join("") +
            "]"
          );
        },

        // @ts-ignore
        any: function () {
          // @ts-ignore
          return "any character";
        },

        // @ts-ignore
        end: function () {
          // @ts-ignore
          return "end of input";
        },

        // @ts-ignore
        other: function (expectation) {
          // @ts-ignore
          return expectation.description;
        },
      };

      // @ts-ignore
      function hex(ch) {
        // @ts-ignore
        return ch.charCodeAt(0).toString(16).toUpperCase();
      }

      // @ts-ignore
      function literalEscape(s) {
        // @ts-ignore
        return (
          s
            // @ts-ignore
            .replace(/\\/g, "\\\\")
            // @ts-ignore
            .replace(/"/g, '\\"')
            // @ts-ignore
            .replace(/\0/g, "\\0")
            // @ts-ignore
            .replace(/\t/g, "\\t")
            // @ts-ignore
            .replace(/\n/g, "\\n")
            // @ts-ignore
            .replace(/\r/g, "\\r")
            // @ts-ignore
            .replace(/[\x00-\x0F]/g, function (ch) {
              return "\\x0" + hex(ch);
            })
            // @ts-ignore
            .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
              return "\\x" + hex(ch);
            })
        );
      }

      // @ts-ignore
      function classEscape(s) {
        // @ts-ignore
        return (
          s
            // @ts-ignore
            .replace(/\\/g, "\\\\")
            // @ts-ignore
            .replace(/\]/g, "\\]")
            // @ts-ignore
            .replace(/\^/g, "\\^")
            // @ts-ignore
            .replace(/-/g, "\\-")
            // @ts-ignore
            .replace(/\0/g, "\\0")
            // @ts-ignore
            .replace(/\t/g, "\\t")
            // @ts-ignore
            .replace(/\n/g, "\\n")
            // @ts-ignore
            .replace(/\r/g, "\\r")
            // @ts-ignore
            .replace(/[\x00-\x0F]/g, function (ch) {
              return "\\x0" + hex(ch);
            })
            // @ts-ignore
            .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
              return "\\x" + hex(ch);
            })
        );
      }

      // @ts-ignore
      function describeExpectation(expectation) {
        // @ts-ignore
        return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
      }

      // @ts-ignore
      function describeExpected(expected) {
        // @ts-ignore
        var descriptions = expected.map(describeExpectation);
        // @ts-ignore
        var i, j;

        // @ts-ignore
        descriptions.sort();

        // @ts-ignore
        if (descriptions.length > 0) {
          // @ts-ignore
          for (i = 1, j = 1; i < descriptions.length; i++) {
            // @ts-ignore
            if (descriptions[i - 1] !== descriptions[i]) {
              // @ts-ignore
              descriptions[j] = descriptions[i];
              // @ts-ignore
              j++;
            }
          }
          // @ts-ignore
          descriptions.length = j;
        }

        // @ts-ignore
        switch (descriptions.length) {
          // @ts-ignore
          case 1:
            // @ts-ignore
            return descriptions[0];

          // @ts-ignore
          case 2:
            // @ts-ignore
            return descriptions[0] + " or " + descriptions[1];

          // @ts-ignore
          default:
            // @ts-ignore
            return (
              descriptions.slice(0, -1).join(", ") +
              // @ts-ignore
              ", or " +
              // @ts-ignore
              descriptions[descriptions.length - 1]
            );
        }
      }

      // @ts-ignore
      function describeFound(found) {
        // @ts-ignore
        return found ? '"' + literalEscape(found) + '"' : "end of input";
      }

      // @ts-ignore
      return (
        "Expected " +
        describeExpected(expected) +
        " but " +
        describeFound(found) +
        " found."
      );
    };

    // @ts-ignore
    function peg$parse(input, options) {
      // @ts-ignore
      options = options !== undefined ? options : {};

      // @ts-ignore
      var peg$FAILED = {};
      // @ts-ignore
      var peg$source = options.grammarSource;

      // @ts-ignore
      var peg$startRuleFunctions = { Word: peg$parseWord };
      // @ts-ignore
      var peg$startRuleFunction = peg$parseWord;

      // @ts-ignore
      var peg$c0 = " ";
      var peg$c1 = "/";
      var peg$c2 = "\u02CC";
      var peg$c3 = "\u02C8";
      var peg$c4 = "b";
      var peg$c5 = "t\u0283";
      var peg$c6 = "t\u0279";
      var peg$c7 = "t";
      var peg$c8 = "kw";
      var peg$c9 = "k";
      var peg$c10 = "z";
      var peg$c11 = "\u0279";
      var peg$c12 = "s";
      var peg$c13 = "m";
      var peg$c14 = "f";
      var peg$c15 = "\u0261";
      var peg$c16 = "n";
      var peg$c17 = "\u026B";
      var peg$c18 = "w";
      var peg$c19 = "p";
      var peg$c20 = "\u03B8";
      var peg$c21 = "v";
      var peg$c22 = "h";
      var peg$c23 = "\u014B";
      var peg$c24 = "\u0283";
      var peg$c25 = "\u0292";
      var peg$c26 = "d\u0292";
      var peg$c27 = "d";
      var peg$c28 = "\xF0";
      var peg$c29 = "\u025B";
      var peg$c30 = "e";
      var peg$c31 = "o\u028A";
      var peg$c32 = "e\u026A";
      var peg$c33 = "a\u026A";
      var peg$c34 = "a\u028A";
      var peg$c35 = "ju";
      var peg$c36 = "j\u0259";
      var peg$c37 = "j\xE6";
      var peg$c38 = "j\u0251";
      var peg$c39 = "j\u028A";
      var peg$c40 = "j\u025B";
      var peg$c41 = "j\u026A";
      var peg$c42 = "j\u0254";
      var peg$c43 = "ji";
      var peg$c44 = "jo\u028A";
      var peg$c45 = "ja\u028A";
      var peg$c46 = "je\u026A";
      var peg$c47 = "\u0259j";
      var peg$c48 = "a";
      var peg$c49 = "\u028A";
      var peg$c50 = "\u0259";
      var peg$c51 = "\u0254";
      var peg$c52 = "u";
      var peg$c53 = "\u026A";
      var peg$c54 = "o";
      var peg$c55 = "i";
      var peg$c56 = "\u0251";
      var peg$c57 = "\u025D";
      var peg$c58 = "\xE6";
      var peg$c59 = "j";

      var peg$e0 = peg$literalExpectation(" ", false);
      var peg$e1 = peg$literalExpectation("/", false);
      var peg$e2 = peg$literalExpectation("\u02CC", false);
      var peg$e3 = peg$literalExpectation("\u02C8", false);
      var peg$e4 = peg$literalExpectation("b", false);
      var peg$e5 = peg$literalExpectation("t\u0283", false);
      var peg$e6 = peg$literalExpectation("t\u0279", false);
      var peg$e7 = peg$literalExpectation("t", false);
      var peg$e8 = peg$literalExpectation("kw", false);
      var peg$e9 = peg$literalExpectation("k", false);
      var peg$e10 = peg$literalExpectation("z", false);
      var peg$e11 = peg$literalExpectation("\u0279", false);
      var peg$e12 = peg$literalExpectation("s", false);
      var peg$e13 = peg$literalExpectation("m", false);
      var peg$e14 = peg$literalExpectation("f", false);
      var peg$e15 = peg$literalExpectation("\u0261", false);
      var peg$e16 = peg$literalExpectation("n", false);
      var peg$e17 = peg$literalExpectation("\u026B", false);
      var peg$e18 = peg$literalExpectation("w", false);
      var peg$e19 = peg$literalExpectation("p", false);
      var peg$e20 = peg$literalExpectation("\u03B8", false);
      var peg$e21 = peg$literalExpectation("v", false);
      var peg$e22 = peg$literalExpectation("h", false);
      var peg$e23 = peg$literalExpectation("\u014B", false);
      var peg$e24 = peg$literalExpectation("\u0283", false);
      var peg$e25 = peg$literalExpectation("\u0292", false);
      var peg$e26 = peg$literalExpectation("d\u0292", false);
      var peg$e27 = peg$literalExpectation("d", false);
      var peg$e28 = peg$literalExpectation("\xF0", false);
      var peg$e29 = peg$literalExpectation("\u025B", false);
      var peg$e30 = peg$literalExpectation("e", false);
      var peg$e31 = peg$literalExpectation("o\u028A", false);
      var peg$e32 = peg$literalExpectation("e\u026A", false);
      var peg$e33 = peg$literalExpectation("a\u026A", false);
      var peg$e34 = peg$literalExpectation("a\u028A", false);
      var peg$e35 = peg$literalExpectation("ju", false);
      var peg$e36 = peg$literalExpectation("j\u0259", false);
      var peg$e37 = peg$literalExpectation("j\xE6", false);
      var peg$e38 = peg$literalExpectation("j\u0251", false);
      var peg$e39 = peg$literalExpectation("j\u028A", false);
      var peg$e40 = peg$literalExpectation("j\u025B", false);
      var peg$e41 = peg$literalExpectation("j\u026A", false);
      var peg$e42 = peg$literalExpectation("j\u0254", false);
      var peg$e43 = peg$literalExpectation("ji", false);
      var peg$e44 = peg$literalExpectation("jo\u028A", false);
      var peg$e45 = peg$literalExpectation("ja\u028A", false);
      var peg$e46 = peg$literalExpectation("je\u026A", false);
      var peg$e47 = peg$literalExpectation("\u0259j", false);
      var peg$e48 = peg$literalExpectation("a", false);
      var peg$e49 = peg$literalExpectation("\u028A", false);
      var peg$e50 = peg$literalExpectation("\u0259", false);
      var peg$e51 = peg$literalExpectation("\u0254", false);
      var peg$e52 = peg$literalExpectation("u", false);
      var peg$e53 = peg$literalExpectation("\u026A", false);
      var peg$e54 = peg$literalExpectation("o", false);
      var peg$e55 = peg$literalExpectation("i", false);
      var peg$e56 = peg$literalExpectation("\u0251", false);
      var peg$e57 = peg$literalExpectation("\u025D", false);
      var peg$e58 = peg$literalExpectation("\xE6", false);
      var peg$e59 = peg$literalExpectation("j", false);
      // @ts-ignore

      var peg$f0 = function (syllables) {
        // @ts-ignore
        return syllables.map((p) => p[1]);
      }; // @ts-ignore

      var peg$f1 = function (stress, head, tail) {
        // @ts-ignore
        return {
          // @ts-ignore
          stress: !!stress || undefined,
          // @ts-ignore
          parts: [head, tail.filter((c) => c).join("")],
        };
      }; // @ts-ignore

      var peg$f2 = function (stress, head, tail) {
        // @ts-ignore
        return {
          // @ts-ignore
          stress: !!stress || undefined,
          // @ts-ignore
          parts: [head, tail],
        };
      }; // @ts-ignore

      var peg$f3 = function (stress, tail) {
        // @ts-ignore
        return {
          // @ts-ignore
          stress: !!stress || undefined,
          // @ts-ignore
          parts: [null, tail.filter((c) => c).join("")],
        };
      }; // @ts-ignore

      var peg$f4 = function (stress, tail) {
        // @ts-ignore
        return {
          // @ts-ignore
          stress: !!stress || undefined,
          // @ts-ignore
          parts: [null, tail],
        };
      }; // @ts-ignore

      var peg$f5 = function (stress, tail) {
        // @ts-ignore
        return {
          // @ts-ignore
          stress: !!stress || undefined,
          // @ts-ignore
          parts: [null, tail],
        };
      }; // @ts-ignore

      var peg$f6 = function (tail) {
        // @ts-ignore
        return tail.filter((c) => c).join("");
      }; // @ts-ignore

      var peg$f7 = function () {
        // @ts-ignore
        return text();
      };
      // @ts-ignore
      var peg$currPos = 0;
      // @ts-ignore
      var peg$savedPos = 0;
      // @ts-ignore
      var peg$posDetailsCache = [{ line: 1, column: 1 }];
      // @ts-ignore
      var peg$maxFailPos = 0;
      // @ts-ignore
      var peg$maxFailExpected = [];
      // @ts-ignore
      var peg$silentFails = 0;

      // @ts-ignore
      var peg$resultsCache = {};

      // @ts-ignore
      var peg$result;

      // @ts-ignore
      if ("startRule" in options) {
        // @ts-ignore
        if (!(options.startRule in peg$startRuleFunctions)) {
          // @ts-ignore
          throw new Error(
            "Can't start parsing from rule \"" + options.startRule + '".'
          );
        }

        // @ts-ignore
        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
      }

      // @ts-ignore
      function text() {
        // @ts-ignore
        return input.substring(peg$savedPos, peg$currPos);
      }

      // @ts-ignore
      function offset() {
        // @ts-ignore
        return peg$savedPos;
      }

      // @ts-ignore
      function range() {
        // @ts-ignore
        return {
          // @ts-ignore
          source: peg$source,
          // @ts-ignore
          start: peg$savedPos,
          // @ts-ignore
          end: peg$currPos,
        };
      }

      // @ts-ignore
      function location() {
        // @ts-ignore
        return peg$computeLocation(peg$savedPos, peg$currPos);
      }

      // @ts-ignore
      function expected(description, location) {
        // @ts-ignore
        location =
          location !== undefined
            ? // @ts-ignore
              location
            : // @ts-ignore
              peg$computeLocation(peg$savedPos, peg$currPos);

        // @ts-ignore
        throw peg$buildStructuredError(
          // @ts-ignore
          [peg$otherExpectation(description)],
          // @ts-ignore
          input.substring(peg$savedPos, peg$currPos),
          // @ts-ignore
          location
        );
      }

      // @ts-ignore
      function error(message, location) {
        // @ts-ignore
        location =
          location !== undefined
            ? // @ts-ignore
              location
            : // @ts-ignore
              peg$computeLocation(peg$savedPos, peg$currPos);

        // @ts-ignore
        throw peg$buildSimpleError(message, location);
      }

      // @ts-ignore
      function peg$literalExpectation(text, ignoreCase) {
        // @ts-ignore
        return { type: "literal", text: text, ignoreCase: ignoreCase };
      }

      // @ts-ignore
      function peg$classExpectation(parts, inverted, ignoreCase) {
        // @ts-ignore
        return {
          type: "class",
          parts: parts,
          inverted: inverted,
          ignoreCase: ignoreCase,
        };
      }

      // @ts-ignore
      function peg$anyExpectation() {
        // @ts-ignore
        return { type: "any" };
      }

      // @ts-ignore
      function peg$endExpectation() {
        // @ts-ignore
        return { type: "end" };
      }

      // @ts-ignore
      function peg$otherExpectation(description) {
        // @ts-ignore
        return { type: "other", description: description };
      }

      // @ts-ignore
      function peg$computePosDetails(pos) {
        // @ts-ignore
        var details = peg$posDetailsCache[pos];
        // @ts-ignore
        var p;

        // @ts-ignore
        if (details) {
          // @ts-ignore
          return details;
          // @ts-ignore
        } else {
          // @ts-ignore
          p = pos - 1;
          // @ts-ignore
          while (!peg$posDetailsCache[p]) {
            // @ts-ignore
            p--;
          }

          // @ts-ignore
          details = peg$posDetailsCache[p];
          // @ts-ignore
          details = {
            // @ts-ignore
            line: details.line,
            // @ts-ignore
            column: details.column,
          };

          // @ts-ignore
          while (p < pos) {
            // @ts-ignore
            if (input.charCodeAt(p) === 10) {
              // @ts-ignore
              details.line++;
              // @ts-ignore
              details.column = 1;
              // @ts-ignore
            } else {
              // @ts-ignore
              details.column++;
            }

            // @ts-ignore
            p++;
          }

          // @ts-ignore
          peg$posDetailsCache[pos] = details;

          // @ts-ignore
          return details;
        }
      }

      // @ts-ignore
      function peg$computeLocation(startPos, endPos, offset) {
        // @ts-ignore
        var startPosDetails = peg$computePosDetails(startPos);
        // @ts-ignore
        var endPosDetails = peg$computePosDetails(endPos);

        // @ts-ignore
        var res = {
          // @ts-ignore
          source: peg$source,
          // @ts-ignore
          start: {
            // @ts-ignore
            offset: startPos,
            // @ts-ignore
            line: startPosDetails.line,
            // @ts-ignore
            column: startPosDetails.column,
          },
          // @ts-ignore
          end: {
            // @ts-ignore
            offset: endPos,
            // @ts-ignore
            line: endPosDetails.line,
            // @ts-ignore
            column: endPosDetails.column,
          },
        };
        // @ts-ignore
        if (offset && peg$source && typeof peg$source.offset === "function") {
          // @ts-ignore
          res.start = peg$source.offset(res.start);
          // @ts-ignore
          res.end = peg$source.offset(res.end);
        }
        // @ts-ignore
        return res;
      }

      // @ts-ignore
      function peg$fail(expected) {
        // @ts-ignore
        if (peg$currPos < peg$maxFailPos) {
          return;
        }

        // @ts-ignore
        if (peg$currPos > peg$maxFailPos) {
          // @ts-ignore
          peg$maxFailPos = peg$currPos;
          // @ts-ignore
          peg$maxFailExpected = [];
        }

        // @ts-ignore
        peg$maxFailExpected.push(expected);
      }

      // @ts-ignore
      function peg$buildSimpleError(message, location) {
        // @ts-ignore
        return new peg$SyntaxError(message, null, null, location);
      }

      // @ts-ignore
      function peg$buildStructuredError(expected, found, location) {
        // @ts-ignore
        return new peg$SyntaxError(
          // @ts-ignore
          peg$SyntaxError.buildMessage(expected, found),
          // @ts-ignore
          expected,
          // @ts-ignore
          found,
          // @ts-ignore
          location
        );
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseWord() {
        // @ts-ignore
        var s0, s1, s2, s3, s4, s5, s6;

        // @ts-ignore
        var key = peg$currPos * 7 + 0;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        s0 = peg$currPos;
        // @ts-ignore
        s1 = [];
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 32) {
          // @ts-ignore
          s2 = peg$c0;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s2 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        // @ts-ignore
        while (s2 !== peg$FAILED) {
          // @ts-ignore
          s1.push(s2);
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 32) {
            // @ts-ignore
            s2 = peg$c0;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s2 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e0);
            }
          }
        }
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 47) {
          // @ts-ignore
          s2 = peg$c1;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s2 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e1);
          }
        }
        // @ts-ignore
        if (s2 === peg$FAILED) {
          // @ts-ignore
          s2 = null;
        }
        // @ts-ignore
        s3 = [];
        // @ts-ignore
        s4 = peg$currPos;
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 716) {
          // @ts-ignore
          s5 = peg$c2;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s5 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e2);
          }
        }
        // @ts-ignore
        if (s5 === peg$FAILED) {
          // @ts-ignore
          s5 = null;
        }
        // @ts-ignore
        s6 = peg$parseSyllable();
        // @ts-ignore
        if (s6 !== peg$FAILED) {
          // @ts-ignore
          s5 = [s5, s6];
          // @ts-ignore
          s4 = s5;
          // @ts-ignore
        } else {
          // @ts-ignore
          peg$currPos = s4;
          // @ts-ignore
          s4 = peg$FAILED;
        }
        // @ts-ignore
        while (s4 !== peg$FAILED) {
          // @ts-ignore
          s3.push(s4);
          // @ts-ignore
          s4 = peg$currPos;
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 716) {
            // @ts-ignore
            s5 = peg$c2;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s5 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e2);
            }
          }
          // @ts-ignore
          if (s5 === peg$FAILED) {
            // @ts-ignore
            s5 = null;
          }
          // @ts-ignore
          s6 = peg$parseSyllable();
          // @ts-ignore
          if (s6 !== peg$FAILED) {
            // @ts-ignore
            s5 = [s5, s6];
            // @ts-ignore
            s4 = s5;
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s4;
            // @ts-ignore
            s4 = peg$FAILED;
          }
        }
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 47) {
          // @ts-ignore
          s4 = peg$c1;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s4 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e1);
          }
        }
        // @ts-ignore
        if (s4 === peg$FAILED) {
          // @ts-ignore
          s4 = null;
        }
        // @ts-ignore
        s5 = [];
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 32) {
          // @ts-ignore
          s6 = peg$c0;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s6 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e0);
          }
        }
        // @ts-ignore
        while (s6 !== peg$FAILED) {
          // @ts-ignore
          s5.push(s6);
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 32) {
            // @ts-ignore
            s6 = peg$c0;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s6 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e0);
            }
          }
        }
        // @ts-ignore
        peg$savedPos = s0;
        // @ts-ignore
        s0 = peg$f0(s3);

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseSyllable() {
        // @ts-ignore
        var s0, s1, s2, s3, s4, s5;

        // @ts-ignore
        var key = peg$currPos * 7 + 1;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        s0 = peg$currPos;
        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 712) {
          // @ts-ignore
          s1 = peg$c3;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s1 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e3);
          }
        }
        // @ts-ignore
        if (s1 === peg$FAILED) {
          // @ts-ignore
          s1 = null;
        }
        // @ts-ignore
        s2 = peg$parseConsonant();
        // @ts-ignore
        if (s2 !== peg$FAILED) {
          // @ts-ignore
          s3 = peg$currPos;
          // @ts-ignore
          s4 = peg$parseVowel();
          // @ts-ignore
          if (s4 !== peg$FAILED) {
            // @ts-ignore
            s5 = peg$parseEndingConsonant();
            // @ts-ignore
            if (s5 !== peg$FAILED) {
              // @ts-ignore
              s4 = [s4, s5];
              // @ts-ignore
              s3 = s4;
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s3;
              // @ts-ignore
              s3 = peg$FAILED;
            }
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s3;
            // @ts-ignore
            s3 = peg$FAILED;
          }
          // @ts-ignore
          if (s3 !== peg$FAILED) {
            // @ts-ignore
            s4 = peg$currPos;
            // @ts-ignore
            peg$silentFails++;
            // @ts-ignore
            s5 = peg$parseDiphthong();
            // @ts-ignore
            if (s5 === peg$FAILED) {
              // @ts-ignore
              s5 = peg$parseVowel();
            }
            // @ts-ignore
            peg$silentFails--;
            // @ts-ignore
            if (s5 === peg$FAILED) {
              // @ts-ignore
              s4 = undefined;
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s4;
              // @ts-ignore
              s4 = peg$FAILED;
            }
            // @ts-ignore
            if (s4 !== peg$FAILED) {
              // @ts-ignore
              peg$savedPos = s0;
              // @ts-ignore
              s0 = peg$f1(s1, s2, s3);
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s0;
              // @ts-ignore
              s0 = peg$FAILED;
            }
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s0;
            // @ts-ignore
            s0 = peg$FAILED;
          }
          // @ts-ignore
        } else {
          // @ts-ignore
          peg$currPos = s0;
          // @ts-ignore
          s0 = peg$FAILED;
        }
        // @ts-ignore
        if (s0 === peg$FAILED) {
          // @ts-ignore
          s0 = peg$currPos;
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 712) {
            // @ts-ignore
            s1 = peg$c3;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s1 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e3);
            }
          }
          // @ts-ignore
          if (s1 === peg$FAILED) {
            // @ts-ignore
            s1 = null;
          }
          // @ts-ignore
          s2 = peg$parseConsonant();
          // @ts-ignore
          if (s2 !== peg$FAILED) {
            // @ts-ignore
            s3 = peg$parseDiphthong();
            // @ts-ignore
            if (s3 === peg$FAILED) {
              // @ts-ignore
              s3 = peg$parseVowel();
            }
            // @ts-ignore
            if (s3 === peg$FAILED) {
              // @ts-ignore
              s3 = null;
            }
            // @ts-ignore
            peg$savedPos = s0;
            // @ts-ignore
            s0 = peg$f2(s1, s2, s3);
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s0;
            // @ts-ignore
            s0 = peg$FAILED;
          }
          // @ts-ignore
          if (s0 === peg$FAILED) {
            // @ts-ignore
            s0 = peg$currPos;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 712) {
              // @ts-ignore
              s1 = peg$c3;
              // @ts-ignore
              peg$currPos++;
              // @ts-ignore
            } else {
              // @ts-ignore
              s1 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e3);
              }
            }
            // @ts-ignore
            if (s1 === peg$FAILED) {
              // @ts-ignore
              s1 = null;
            }
            // @ts-ignore
            s2 = peg$currPos;
            // @ts-ignore
            s3 = peg$parseVowel();
            // @ts-ignore
            if (s3 !== peg$FAILED) {
              // @ts-ignore
              s4 = peg$parseEndingConsonant();
              // @ts-ignore
              if (s4 !== peg$FAILED) {
                // @ts-ignore
                s3 = [s3, s4];
                // @ts-ignore
                s2 = s3;
                // @ts-ignore
              } else {
                // @ts-ignore
                peg$currPos = s2;
                // @ts-ignore
                s2 = peg$FAILED;
              }
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s2;
              // @ts-ignore
              s2 = peg$FAILED;
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
              // @ts-ignore
              s3 = peg$currPos;
              // @ts-ignore
              peg$silentFails++;
              // @ts-ignore
              s4 = peg$parseVowel();
              // @ts-ignore
              peg$silentFails--;
              // @ts-ignore
              if (s4 === peg$FAILED) {
                // @ts-ignore
                s3 = undefined;
                // @ts-ignore
              } else {
                // @ts-ignore
                peg$currPos = s3;
                // @ts-ignore
                s3 = peg$FAILED;
              }
              // @ts-ignore
              if (s3 !== peg$FAILED) {
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f3(s1, s2);
                // @ts-ignore
              } else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
              }
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s0;
              // @ts-ignore
              s0 = peg$FAILED;
            }
            // @ts-ignore
            if (s0 === peg$FAILED) {
              // @ts-ignore
              s0 = peg$currPos;
              // @ts-ignore
              if (input.charCodeAt(peg$currPos) === 712) {
                // @ts-ignore
                s1 = peg$c3;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
              } else {
                // @ts-ignore
                s1 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                  peg$fail(peg$e3);
                }
              }
              // @ts-ignore
              if (s1 === peg$FAILED) {
                // @ts-ignore
                s1 = null;
              }
              // @ts-ignore
              s2 = peg$parseDiphthong();
              // @ts-ignore
              if (s2 !== peg$FAILED) {
                // @ts-ignore
                peg$savedPos = s0;
                // @ts-ignore
                s0 = peg$f4(s1, s2);
                // @ts-ignore
              } else {
                // @ts-ignore
                peg$currPos = s0;
                // @ts-ignore
                s0 = peg$FAILED;
              }
              // @ts-ignore
              if (s0 === peg$FAILED) {
                // @ts-ignore
                s0 = peg$currPos;
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 712) {
                  // @ts-ignore
                  s1 = peg$c3;
                  // @ts-ignore
                  peg$currPos++;
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  s1 = peg$FAILED;
                  // @ts-ignore
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                  }
                }
                // @ts-ignore
                if (s1 === peg$FAILED) {
                  // @ts-ignore
                  s1 = null;
                }
                // @ts-ignore
                s2 = peg$parseVowel();
                // @ts-ignore
                if (s2 !== peg$FAILED) {
                  // @ts-ignore
                  peg$savedPos = s0;
                  // @ts-ignore
                  s0 = peg$f5(s1, s2);
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  peg$currPos = s0;
                  // @ts-ignore
                  s0 = peg$FAILED;
                }
              }
            }
          }
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseSyllableEnding() {
        // @ts-ignore
        var s0, s1, s2, s3;

        // @ts-ignore
        var key = peg$currPos * 7 + 2;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        s0 = peg$currPos;
        // @ts-ignore
        s1 = peg$currPos;
        // @ts-ignore
        s2 = peg$parseVowel();
        // @ts-ignore
        if (s2 !== peg$FAILED) {
          // @ts-ignore
          s3 = peg$parseEndingConsonant();
          // @ts-ignore
          if (s3 !== peg$FAILED) {
            // @ts-ignore
            s2 = [s2, s3];
            // @ts-ignore
            s1 = s2;
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s1;
            // @ts-ignore
            s1 = peg$FAILED;
          }
          // @ts-ignore
        } else {
          // @ts-ignore
          peg$currPos = s1;
          // @ts-ignore
          s1 = peg$FAILED;
        }
        // @ts-ignore
        if (s1 !== peg$FAILED) {
          // @ts-ignore
          s2 = peg$currPos;
          // @ts-ignore
          peg$silentFails++;
          // @ts-ignore
          s3 = peg$parseVowel();
          // @ts-ignore
          peg$silentFails--;
          // @ts-ignore
          if (s3 === peg$FAILED) {
            // @ts-ignore
            s2 = undefined;
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s2;
            // @ts-ignore
            s2 = peg$FAILED;
          }
          // @ts-ignore
          if (s2 !== peg$FAILED) {
            // @ts-ignore
            peg$savedPos = s0;
            // @ts-ignore
            s0 = peg$f6(s1);
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s0;
            // @ts-ignore
            s0 = peg$FAILED;
          }
          // @ts-ignore
        } else {
          // @ts-ignore
          peg$currPos = s0;
          // @ts-ignore
          s0 = peg$FAILED;
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseConsonant() {
        // @ts-ignore
        var s0;

        // @ts-ignore
        var key = peg$currPos * 7 + 3;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 98) {
          // @ts-ignore
          s0 = peg$c4;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s0 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e4);
          }
        }
        // @ts-ignore
        if (s0 === peg$FAILED) {
          // @ts-ignore
          if (input.substr(peg$currPos, 2) === peg$c5) {
            // @ts-ignore
            s0 = peg$c5;
            // @ts-ignore
            peg$currPos += 2;
            // @ts-ignore
          } else {
            // @ts-ignore
            s0 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e5);
            }
          }
          // @ts-ignore
          if (s0 === peg$FAILED) {
            // @ts-ignore
            if (input.substr(peg$currPos, 2) === peg$c6) {
              // @ts-ignore
              s0 = peg$c6;
              // @ts-ignore
              peg$currPos += 2;
              // @ts-ignore
            } else {
              // @ts-ignore
              s0 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e6);
              }
            }
            // @ts-ignore
            if (s0 === peg$FAILED) {
              // @ts-ignore
              if (input.charCodeAt(peg$currPos) === 116) {
                // @ts-ignore
                s0 = peg$c7;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
              } else {
                // @ts-ignore
                s0 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                  peg$fail(peg$e7);
                }
              }
              // @ts-ignore
              if (s0 === peg$FAILED) {
                // @ts-ignore
                if (input.substr(peg$currPos, 2) === peg$c8) {
                  // @ts-ignore
                  s0 = peg$c8;
                  // @ts-ignore
                  peg$currPos += 2;
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  s0 = peg$FAILED;
                  // @ts-ignore
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e8);
                  }
                }
                // @ts-ignore
                if (s0 === peg$FAILED) {
                  // @ts-ignore
                  if (input.charCodeAt(peg$currPos) === 107) {
                    // @ts-ignore
                    s0 = peg$c9;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                  } else {
                    // @ts-ignore
                    s0 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e9);
                    }
                  }
                  // @ts-ignore
                  if (s0 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 122) {
                      // @ts-ignore
                      s0 = peg$c10;
                      // @ts-ignore
                      peg$currPos++;
                      // @ts-ignore
                    } else {
                      // @ts-ignore
                      s0 = peg$FAILED;
                      // @ts-ignore
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e10);
                      }
                    }
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                      // @ts-ignore
                      if (input.charCodeAt(peg$currPos) === 633) {
                        // @ts-ignore
                        s0 = peg$c11;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                      } else {
                        // @ts-ignore
                        s0 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e11);
                        }
                      }
                      // @ts-ignore
                      if (s0 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 115) {
                          // @ts-ignore
                          s0 = peg$c12;
                          // @ts-ignore
                          peg$currPos++;
                          // @ts-ignore
                        } else {
                          // @ts-ignore
                          s0 = peg$FAILED;
                          // @ts-ignore
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e12);
                          }
                        }
                        // @ts-ignore
                        if (s0 === peg$FAILED) {
                          // @ts-ignore
                          if (input.charCodeAt(peg$currPos) === 109) {
                            // @ts-ignore
                            s0 = peg$c13;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                          } else {
                            // @ts-ignore
                            s0 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e13);
                            }
                          }
                          // @ts-ignore
                          if (s0 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 102) {
                              // @ts-ignore
                              s0 = peg$c14;
                              // @ts-ignore
                              peg$currPos++;
                              // @ts-ignore
                            } else {
                              // @ts-ignore
                              s0 = peg$FAILED;
                              // @ts-ignore
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                              }
                            }
                            // @ts-ignore
                            if (s0 === peg$FAILED) {
                              // @ts-ignore
                              if (input.charCodeAt(peg$currPos) === 609) {
                                // @ts-ignore
                                s0 = peg$c15;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                              } else {
                                // @ts-ignore
                                s0 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e15);
                                }
                              }
                              // @ts-ignore
                              if (s0 === peg$FAILED) {
                                // @ts-ignore
                                if (input.charCodeAt(peg$currPos) === 110) {
                                  // @ts-ignore
                                  s0 = peg$c16;
                                  // @ts-ignore
                                  peg$currPos++;
                                  // @ts-ignore
                                } else {
                                  // @ts-ignore
                                  s0 = peg$FAILED;
                                  // @ts-ignore
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e16);
                                  }
                                }
                                // @ts-ignore
                                if (s0 === peg$FAILED) {
                                  // @ts-ignore
                                  if (input.charCodeAt(peg$currPos) === 619) {
                                    // @ts-ignore
                                    s0 = peg$c17;
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                  } else {
                                    // @ts-ignore
                                    s0 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$e17);
                                    }
                                  }
                                  // @ts-ignore
                                  if (s0 === peg$FAILED) {
                                    // @ts-ignore
                                    if (input.charCodeAt(peg$currPos) === 119) {
                                      // @ts-ignore
                                      s0 = peg$c18;
                                      // @ts-ignore
                                      peg$currPos++;
                                      // @ts-ignore
                                    } else {
                                      // @ts-ignore
                                      s0 = peg$FAILED;
                                      // @ts-ignore
                                      if (peg$silentFails === 0) {
                                        peg$fail(peg$e18);
                                      }
                                    }
                                    // @ts-ignore
                                    if (s0 === peg$FAILED) {
                                      // @ts-ignore
                                      if (
                                        input.charCodeAt(peg$currPos) === 112
                                      ) {
                                        // @ts-ignore
                                        s0 = peg$c19;
                                        // @ts-ignore
                                        peg$currPos++;
                                        // @ts-ignore
                                      } else {
                                        // @ts-ignore
                                        s0 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$e19);
                                        }
                                      }
                                      // @ts-ignore
                                      if (s0 === peg$FAILED) {
                                        // @ts-ignore
                                        if (
                                          input.charCodeAt(peg$currPos) === 952
                                        ) {
                                          // @ts-ignore
                                          s0 = peg$c20;
                                          // @ts-ignore
                                          peg$currPos++;
                                          // @ts-ignore
                                        } else {
                                          // @ts-ignore
                                          s0 = peg$FAILED;
                                          // @ts-ignore
                                          if (peg$silentFails === 0) {
                                            peg$fail(peg$e20);
                                          }
                                        }
                                        // @ts-ignore
                                        if (s0 === peg$FAILED) {
                                          // @ts-ignore
                                          if (
                                            input.charCodeAt(peg$currPos) ===
                                            118
                                          ) {
                                            // @ts-ignore
                                            s0 = peg$c21;
                                            // @ts-ignore
                                            peg$currPos++;
                                            // @ts-ignore
                                          } else {
                                            // @ts-ignore
                                            s0 = peg$FAILED;
                                            // @ts-ignore
                                            if (peg$silentFails === 0) {
                                              peg$fail(peg$e21);
                                            }
                                          }
                                          // @ts-ignore
                                          if (s0 === peg$FAILED) {
                                            // @ts-ignore
                                            if (
                                              input.charCodeAt(peg$currPos) ===
                                              104
                                            ) {
                                              // @ts-ignore
                                              s0 = peg$c22;
                                              // @ts-ignore
                                              peg$currPos++;
                                              // @ts-ignore
                                            } else {
                                              // @ts-ignore
                                              s0 = peg$FAILED;
                                              // @ts-ignore
                                              if (peg$silentFails === 0) {
                                                peg$fail(peg$e22);
                                              }
                                            }
                                            // @ts-ignore
                                            if (s0 === peg$FAILED) {
                                              // @ts-ignore
                                              if (
                                                input.charCodeAt(
                                                  peg$currPos
                                                ) === 331
                                              ) {
                                                // @ts-ignore
                                                s0 = peg$c23;
                                                // @ts-ignore
                                                peg$currPos++;
                                                // @ts-ignore
                                              } else {
                                                // @ts-ignore
                                                s0 = peg$FAILED;
                                                // @ts-ignore
                                                if (peg$silentFails === 0) {
                                                  peg$fail(peg$e23);
                                                }
                                              }
                                              // @ts-ignore
                                              if (s0 === peg$FAILED) {
                                                // @ts-ignore
                                                if (
                                                  input.charCodeAt(
                                                    peg$currPos
                                                  ) === 643
                                                ) {
                                                  // @ts-ignore
                                                  s0 = peg$c24;
                                                  // @ts-ignore
                                                  peg$currPos++;
                                                  // @ts-ignore
                                                } else {
                                                  // @ts-ignore
                                                  s0 = peg$FAILED;
                                                  // @ts-ignore
                                                  if (peg$silentFails === 0) {
                                                    peg$fail(peg$e24);
                                                  }
                                                }
                                                // @ts-ignore
                                                if (s0 === peg$FAILED) {
                                                  // @ts-ignore
                                                  if (
                                                    input.charCodeAt(
                                                      peg$currPos
                                                    ) === 658
                                                  ) {
                                                    // @ts-ignore
                                                    s0 = peg$c25;
                                                    // @ts-ignore
                                                    peg$currPos++;
                                                    // @ts-ignore
                                                  } else {
                                                    // @ts-ignore
                                                    s0 = peg$FAILED;
                                                    // @ts-ignore
                                                    if (peg$silentFails === 0) {
                                                      peg$fail(peg$e25);
                                                    }
                                                  }
                                                  // @ts-ignore
                                                  if (s0 === peg$FAILED) {
                                                    // @ts-ignore
                                                    if (
                                                      input.substr(
                                                        peg$currPos,
                                                        2
                                                      ) === peg$c26
                                                    ) {
                                                      // @ts-ignore
                                                      s0 = peg$c26;
                                                      // @ts-ignore
                                                      peg$currPos += 2;
                                                      // @ts-ignore
                                                    } else {
                                                      // @ts-ignore
                                                      s0 = peg$FAILED;
                                                      // @ts-ignore
                                                      if (
                                                        peg$silentFails === 0
                                                      ) {
                                                        peg$fail(peg$e26);
                                                      }
                                                    }
                                                    // @ts-ignore
                                                    if (s0 === peg$FAILED) {
                                                      // @ts-ignore
                                                      if (
                                                        input.charCodeAt(
                                                          peg$currPos
                                                        ) === 100
                                                      ) {
                                                        // @ts-ignore
                                                        s0 = peg$c27;
                                                        // @ts-ignore
                                                        peg$currPos++;
                                                        // @ts-ignore
                                                      } else {
                                                        // @ts-ignore
                                                        s0 = peg$FAILED;
                                                        // @ts-ignore
                                                        if (
                                                          peg$silentFails === 0
                                                        ) {
                                                          peg$fail(peg$e27);
                                                        }
                                                      }
                                                      // @ts-ignore
                                                      if (s0 === peg$FAILED) {
                                                        // @ts-ignore
                                                        if (
                                                          input.charCodeAt(
                                                            peg$currPos
                                                          ) === 240
                                                        ) {
                                                          // @ts-ignore
                                                          s0 = peg$c28;
                                                          // @ts-ignore
                                                          peg$currPos++;
                                                          // @ts-ignore
                                                        } else {
                                                          // @ts-ignore
                                                          s0 = peg$FAILED;
                                                          // @ts-ignore
                                                          if (
                                                            peg$silentFails ===
                                                            0
                                                          ) {
                                                            peg$fail(peg$e28);
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseEndingConsonant() {
        // @ts-ignore
        var s0, s1, s2, s3;

        // @ts-ignore
        var key = peg$currPos * 7 + 4;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 98) {
          // @ts-ignore
          s0 = peg$c4;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s0 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e4);
          }
        }
        // @ts-ignore
        if (s0 === peg$FAILED) {
          // @ts-ignore
          s0 = peg$currPos;
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 116) {
            // @ts-ignore
            s1 = peg$c7;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s1 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e7);
            }
          }
          // @ts-ignore
          if (s1 !== peg$FAILED) {
            // @ts-ignore
            s2 = peg$currPos;
            // @ts-ignore
            peg$silentFails++;
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 643) {
              // @ts-ignore
              s3 = peg$c24;
              // @ts-ignore
              peg$currPos++;
              // @ts-ignore
            } else {
              // @ts-ignore
              s3 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e24);
              }
            }
            // @ts-ignore
            peg$silentFails--;
            // @ts-ignore
            if (s3 === peg$FAILED) {
              // @ts-ignore
              s2 = undefined;
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s2;
              // @ts-ignore
              s2 = peg$FAILED;
            }
            // @ts-ignore
            if (s2 !== peg$FAILED) {
              // @ts-ignore
              peg$savedPos = s0;
              // @ts-ignore
              s0 = peg$f7();
              // @ts-ignore
            } else {
              // @ts-ignore
              peg$currPos = s0;
              // @ts-ignore
              s0 = peg$FAILED;
            }
            // @ts-ignore
          } else {
            // @ts-ignore
            peg$currPos = s0;
            // @ts-ignore
            s0 = peg$FAILED;
          }
          // @ts-ignore
          if (s0 === peg$FAILED) {
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 107) {
              // @ts-ignore
              s0 = peg$c9;
              // @ts-ignore
              peg$currPos++;
              // @ts-ignore
            } else {
              // @ts-ignore
              s0 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e9);
              }
            }
            // @ts-ignore
            if (s0 === peg$FAILED) {
              // @ts-ignore
              if (input.charCodeAt(peg$currPos) === 109) {
                // @ts-ignore
                s0 = peg$c13;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
              } else {
                // @ts-ignore
                s0 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                  peg$fail(peg$e13);
                }
              }
              // @ts-ignore
              if (s0 === peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 609) {
                  // @ts-ignore
                  s0 = peg$c15;
                  // @ts-ignore
                  peg$currPos++;
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  s0 = peg$FAILED;
                  // @ts-ignore
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e15);
                  }
                }
                // @ts-ignore
                if (s0 === peg$FAILED) {
                  // @ts-ignore
                  if (input.charCodeAt(peg$currPos) === 603) {
                    // @ts-ignore
                    s0 = peg$c29;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                  } else {
                    // @ts-ignore
                    s0 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e29);
                    }
                  }
                  // @ts-ignore
                  if (s0 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 110) {
                      // @ts-ignore
                      s0 = peg$c16;
                      // @ts-ignore
                      peg$currPos++;
                      // @ts-ignore
                    } else {
                      // @ts-ignore
                      s0 = peg$FAILED;
                      // @ts-ignore
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e16);
                      }
                    }
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                      // @ts-ignore
                      if (input.charCodeAt(peg$currPos) === 101) {
                        // @ts-ignore
                        s0 = peg$c30;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                      } else {
                        // @ts-ignore
                        s0 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e30);
                        }
                      }
                      // @ts-ignore
                      if (s0 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 112) {
                          // @ts-ignore
                          s0 = peg$c19;
                          // @ts-ignore
                          peg$currPos++;
                          // @ts-ignore
                        } else {
                          // @ts-ignore
                          s0 = peg$FAILED;
                          // @ts-ignore
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e19);
                          }
                        }
                        // @ts-ignore
                        if (s0 === peg$FAILED) {
                          // @ts-ignore
                          if (input.charCodeAt(peg$currPos) === 104) {
                            // @ts-ignore
                            s0 = peg$c22;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                          } else {
                            // @ts-ignore
                            s0 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e22);
                            }
                          }
                          // @ts-ignore
                          if (s0 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 331) {
                              // @ts-ignore
                              s0 = peg$c23;
                              // @ts-ignore
                              peg$currPos++;
                              // @ts-ignore
                            } else {
                              // @ts-ignore
                              s0 = peg$FAILED;
                              // @ts-ignore
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e23);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseDiphthong() {
        // @ts-ignore
        var s0;

        // @ts-ignore
        var key = peg$currPos * 7 + 5;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        if (input.substr(peg$currPos, 2) === peg$c31) {
          // @ts-ignore
          s0 = peg$c31;
          // @ts-ignore
          peg$currPos += 2;
          // @ts-ignore
        } else {
          // @ts-ignore
          s0 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e31);
          }
        }
        // @ts-ignore
        if (s0 === peg$FAILED) {
          // @ts-ignore
          if (input.substr(peg$currPos, 2) === peg$c32) {
            // @ts-ignore
            s0 = peg$c32;
            // @ts-ignore
            peg$currPos += 2;
            // @ts-ignore
          } else {
            // @ts-ignore
            s0 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e32);
            }
          }
          // @ts-ignore
          if (s0 === peg$FAILED) {
            // @ts-ignore
            if (input.substr(peg$currPos, 2) === peg$c33) {
              // @ts-ignore
              s0 = peg$c33;
              // @ts-ignore
              peg$currPos += 2;
              // @ts-ignore
            } else {
              // @ts-ignore
              s0 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e33);
              }
            }
            // @ts-ignore
            if (s0 === peg$FAILED) {
              // @ts-ignore
              if (input.substr(peg$currPos, 2) === peg$c34) {
                // @ts-ignore
                s0 = peg$c34;
                // @ts-ignore
                peg$currPos += 2;
                // @ts-ignore
              } else {
                // @ts-ignore
                s0 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                  peg$fail(peg$e34);
                }
              }
              // @ts-ignore
              if (s0 === peg$FAILED) {
                // @ts-ignore
                if (input.substr(peg$currPos, 2) === peg$c35) {
                  // @ts-ignore
                  s0 = peg$c35;
                  // @ts-ignore
                  peg$currPos += 2;
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  s0 = peg$FAILED;
                  // @ts-ignore
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e35);
                  }
                }
                // @ts-ignore
                if (s0 === peg$FAILED) {
                  // @ts-ignore
                  if (input.substr(peg$currPos, 2) === peg$c36) {
                    // @ts-ignore
                    s0 = peg$c36;
                    // @ts-ignore
                    peg$currPos += 2;
                    // @ts-ignore
                  } else {
                    // @ts-ignore
                    s0 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e36);
                    }
                  }
                  // @ts-ignore
                  if (s0 === peg$FAILED) {
                    // @ts-ignore
                    if (input.substr(peg$currPos, 2) === peg$c37) {
                      // @ts-ignore
                      s0 = peg$c37;
                      // @ts-ignore
                      peg$currPos += 2;
                      // @ts-ignore
                    } else {
                      // @ts-ignore
                      s0 = peg$FAILED;
                      // @ts-ignore
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e37);
                      }
                    }
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                      // @ts-ignore
                      if (input.substr(peg$currPos, 2) === peg$c38) {
                        // @ts-ignore
                        s0 = peg$c38;
                        // @ts-ignore
                        peg$currPos += 2;
                        // @ts-ignore
                      } else {
                        // @ts-ignore
                        s0 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e38);
                        }
                      }
                      // @ts-ignore
                      if (s0 === peg$FAILED) {
                        // @ts-ignore
                        if (input.substr(peg$currPos, 2) === peg$c39) {
                          // @ts-ignore
                          s0 = peg$c39;
                          // @ts-ignore
                          peg$currPos += 2;
                          // @ts-ignore
                        } else {
                          // @ts-ignore
                          s0 = peg$FAILED;
                          // @ts-ignore
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e39);
                          }
                        }
                        // @ts-ignore
                        if (s0 === peg$FAILED) {
                          // @ts-ignore
                          if (input.substr(peg$currPos, 2) === peg$c40) {
                            // @ts-ignore
                            s0 = peg$c40;
                            // @ts-ignore
                            peg$currPos += 2;
                            // @ts-ignore
                          } else {
                            // @ts-ignore
                            s0 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e40);
                            }
                          }
                          // @ts-ignore
                          if (s0 === peg$FAILED) {
                            // @ts-ignore
                            if (input.substr(peg$currPos, 2) === peg$c41) {
                              // @ts-ignore
                              s0 = peg$c41;
                              // @ts-ignore
                              peg$currPos += 2;
                              // @ts-ignore
                            } else {
                              // @ts-ignore
                              s0 = peg$FAILED;
                              // @ts-ignore
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e41);
                              }
                            }
                            // @ts-ignore
                            if (s0 === peg$FAILED) {
                              // @ts-ignore
                              if (input.substr(peg$currPos, 2) === peg$c42) {
                                // @ts-ignore
                                s0 = peg$c42;
                                // @ts-ignore
                                peg$currPos += 2;
                                // @ts-ignore
                              } else {
                                // @ts-ignore
                                s0 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e42);
                                }
                              }
                              // @ts-ignore
                              if (s0 === peg$FAILED) {
                                // @ts-ignore
                                if (input.substr(peg$currPos, 2) === peg$c43) {
                                  // @ts-ignore
                                  s0 = peg$c43;
                                  // @ts-ignore
                                  peg$currPos += 2;
                                  // @ts-ignore
                                } else {
                                  // @ts-ignore
                                  s0 = peg$FAILED;
                                  // @ts-ignore
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e43);
                                  }
                                }
                                // @ts-ignore
                                if (s0 === peg$FAILED) {
                                  // @ts-ignore
                                  if (
                                    input.substr(peg$currPos, 3) === peg$c44
                                  ) {
                                    // @ts-ignore
                                    s0 = peg$c44;
                                    // @ts-ignore
                                    peg$currPos += 3;
                                    // @ts-ignore
                                  } else {
                                    // @ts-ignore
                                    s0 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$e44);
                                    }
                                  }
                                  // @ts-ignore
                                  if (s0 === peg$FAILED) {
                                    // @ts-ignore
                                    if (
                                      input.substr(peg$currPos, 3) === peg$c45
                                    ) {
                                      // @ts-ignore
                                      s0 = peg$c45;
                                      // @ts-ignore
                                      peg$currPos += 3;
                                      // @ts-ignore
                                    } else {
                                      // @ts-ignore
                                      s0 = peg$FAILED;
                                      // @ts-ignore
                                      if (peg$silentFails === 0) {
                                        peg$fail(peg$e45);
                                      }
                                    }
                                    // @ts-ignore
                                    if (s0 === peg$FAILED) {
                                      // @ts-ignore
                                      if (
                                        input.substr(peg$currPos, 3) === peg$c46
                                      ) {
                                        // @ts-ignore
                                        s0 = peg$c46;
                                        // @ts-ignore
                                        peg$currPos += 3;
                                        // @ts-ignore
                                      } else {
                                        // @ts-ignore
                                        s0 = peg$FAILED;
                                        // @ts-ignore
                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$e46);
                                        }
                                      }
                                      // @ts-ignore
                                      if (s0 === peg$FAILED) {
                                        // @ts-ignore
                                        if (
                                          input.substr(peg$currPos, 2) ===
                                          peg$c47
                                        ) {
                                          // @ts-ignore
                                          s0 = peg$c47;
                                          // @ts-ignore
                                          peg$currPos += 2;
                                          // @ts-ignore
                                        } else {
                                          // @ts-ignore
                                          s0 = peg$FAILED;
                                          // @ts-ignore
                                          if (peg$silentFails === 0) {
                                            peg$fail(peg$e47);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      function // @ts-ignore
      peg$parseVowel() {
        // @ts-ignore
        var s0;

        // @ts-ignore
        var key = peg$currPos * 7 + 6;
        // @ts-ignore
        var cached = peg$resultsCache[key];

        // @ts-ignore
        if (cached) {
          // @ts-ignore
          peg$currPos = cached.nextPos;

          // @ts-ignore
          return cached.result;
        }

        // @ts-ignore
        if (input.charCodeAt(peg$currPos) === 97) {
          // @ts-ignore
          s0 = peg$c48;
          // @ts-ignore
          peg$currPos++;
          // @ts-ignore
        } else {
          // @ts-ignore
          s0 = peg$FAILED;
          // @ts-ignore
          if (peg$silentFails === 0) {
            peg$fail(peg$e48);
          }
        }
        // @ts-ignore
        if (s0 === peg$FAILED) {
          // @ts-ignore
          if (input.charCodeAt(peg$currPos) === 650) {
            // @ts-ignore
            s0 = peg$c49;
            // @ts-ignore
            peg$currPos++;
            // @ts-ignore
          } else {
            // @ts-ignore
            s0 = peg$FAILED;
            // @ts-ignore
            if (peg$silentFails === 0) {
              peg$fail(peg$e49);
            }
          }
          // @ts-ignore
          if (s0 === peg$FAILED) {
            // @ts-ignore
            if (input.charCodeAt(peg$currPos) === 601) {
              // @ts-ignore
              s0 = peg$c50;
              // @ts-ignore
              peg$currPos++;
              // @ts-ignore
            } else {
              // @ts-ignore
              s0 = peg$FAILED;
              // @ts-ignore
              if (peg$silentFails === 0) {
                peg$fail(peg$e50);
              }
            }
            // @ts-ignore
            if (s0 === peg$FAILED) {
              // @ts-ignore
              if (input.charCodeAt(peg$currPos) === 596) {
                // @ts-ignore
                s0 = peg$c51;
                // @ts-ignore
                peg$currPos++;
                // @ts-ignore
              } else {
                // @ts-ignore
                s0 = peg$FAILED;
                // @ts-ignore
                if (peg$silentFails === 0) {
                  peg$fail(peg$e51);
                }
              }
              // @ts-ignore
              if (s0 === peg$FAILED) {
                // @ts-ignore
                if (input.charCodeAt(peg$currPos) === 117) {
                  // @ts-ignore
                  s0 = peg$c52;
                  // @ts-ignore
                  peg$currPos++;
                  // @ts-ignore
                } else {
                  // @ts-ignore
                  s0 = peg$FAILED;
                  // @ts-ignore
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e52);
                  }
                }
                // @ts-ignore
                if (s0 === peg$FAILED) {
                  // @ts-ignore
                  if (input.charCodeAt(peg$currPos) === 618) {
                    // @ts-ignore
                    s0 = peg$c53;
                    // @ts-ignore
                    peg$currPos++;
                    // @ts-ignore
                  } else {
                    // @ts-ignore
                    s0 = peg$FAILED;
                    // @ts-ignore
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e53);
                    }
                  }
                  // @ts-ignore
                  if (s0 === peg$FAILED) {
                    // @ts-ignore
                    if (input.charCodeAt(peg$currPos) === 111) {
                      // @ts-ignore
                      s0 = peg$c54;
                      // @ts-ignore
                      peg$currPos++;
                      // @ts-ignore
                    } else {
                      // @ts-ignore
                      s0 = peg$FAILED;
                      // @ts-ignore
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e54);
                      }
                    }
                    // @ts-ignore
                    if (s0 === peg$FAILED) {
                      // @ts-ignore
                      if (input.charCodeAt(peg$currPos) === 603) {
                        // @ts-ignore
                        s0 = peg$c29;
                        // @ts-ignore
                        peg$currPos++;
                        // @ts-ignore
                      } else {
                        // @ts-ignore
                        s0 = peg$FAILED;
                        // @ts-ignore
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e29);
                        }
                      }
                      // @ts-ignore
                      if (s0 === peg$FAILED) {
                        // @ts-ignore
                        if (input.charCodeAt(peg$currPos) === 101) {
                          // @ts-ignore
                          s0 = peg$c30;
                          // @ts-ignore
                          peg$currPos++;
                          // @ts-ignore
                        } else {
                          // @ts-ignore
                          s0 = peg$FAILED;
                          // @ts-ignore
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                          }
                        }
                        // @ts-ignore
                        if (s0 === peg$FAILED) {
                          // @ts-ignore
                          if (input.charCodeAt(peg$currPos) === 105) {
                            // @ts-ignore
                            s0 = peg$c55;
                            // @ts-ignore
                            peg$currPos++;
                            // @ts-ignore
                          } else {
                            // @ts-ignore
                            s0 = peg$FAILED;
                            // @ts-ignore
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e55);
                            }
                          }
                          // @ts-ignore
                          if (s0 === peg$FAILED) {
                            // @ts-ignore
                            if (input.charCodeAt(peg$currPos) === 593) {
                              // @ts-ignore
                              s0 = peg$c56;
                              // @ts-ignore
                              peg$currPos++;
                              // @ts-ignore
                            } else {
                              // @ts-ignore
                              s0 = peg$FAILED;
                              // @ts-ignore
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e56);
                              }
                            }
                            // @ts-ignore
                            if (s0 === peg$FAILED) {
                              // @ts-ignore
                              if (input.charCodeAt(peg$currPos) === 605) {
                                // @ts-ignore
                                s0 = peg$c57;
                                // @ts-ignore
                                peg$currPos++;
                                // @ts-ignore
                              } else {
                                // @ts-ignore
                                s0 = peg$FAILED;
                                // @ts-ignore
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e57);
                                }
                              }
                              // @ts-ignore
                              if (s0 === peg$FAILED) {
                                // @ts-ignore
                                if (input.charCodeAt(peg$currPos) === 230) {
                                  // @ts-ignore
                                  s0 = peg$c58;
                                  // @ts-ignore
                                  peg$currPos++;
                                  // @ts-ignore
                                } else {
                                  // @ts-ignore
                                  s0 = peg$FAILED;
                                  // @ts-ignore
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e58);
                                  }
                                }
                                // @ts-ignore
                                if (s0 === peg$FAILED) {
                                  // @ts-ignore
                                  if (input.charCodeAt(peg$currPos) === 106) {
                                    // @ts-ignore
                                    s0 = peg$c59;
                                    // @ts-ignore
                                    peg$currPos++;
                                    // @ts-ignore
                                  } else {
                                    // @ts-ignore
                                    s0 = peg$FAILED;
                                    // @ts-ignore
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$e59);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        // @ts-ignore
        peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

        // @ts-ignore
        return s0;
      }

      // @ts-ignore
      peg$result = peg$startRuleFunction();

      // @ts-ignore
      if (peg$result !== peg$FAILED && peg$currPos === input.length) {
        // @ts-ignore
        return peg$result;
        // @ts-ignore
      } else {
        // @ts-ignore
        if (peg$result !== peg$FAILED && peg$currPos < input.length) {
          // @ts-ignore
          peg$fail(peg$endExpectation());
        }

        // @ts-ignore
        throw peg$buildStructuredError(
          // @ts-ignore
          peg$maxFailExpected,
          // @ts-ignore
          peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
          // @ts-ignore
          peg$maxFailPos < input.length
            ? // @ts-ignore
              peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
            : // @ts-ignore
              peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
        );
      }
    }

    // @ts-ignore
    return {
      SyntaxError: peg$SyntaxError,
      parse: peg$parse,
    };
  })();

export interface FilePosition {
  offset: number;
  line: number;
  column: number;
}

export interface FileRange {
  start: FilePosition;
  end: FilePosition;
  source: string;
}

export interface LiteralExpectation {
  type: "literal";
  text: string;
  ignoreCase: boolean;
}

export interface ClassParts extends Array<string | ClassParts> {}

export interface ClassExpectation {
  type: "class";
  parts: ClassParts;
  inverted: boolean;
  ignoreCase: boolean;
}

export interface AnyExpectation {
  type: "any";
}

export interface EndExpectation {
  type: "end";
}

export interface OtherExpectation {
  type: "other";
  description: string;
}

export type Expectation =
  | LiteralExpectation
  | ClassExpectation
  | AnyExpectation
  | EndExpectation
  | OtherExpectation;

declare class _PeggySyntaxError extends Error {
  public static buildMessage(
    expected: Expectation[],
    found: string | null
  ): string;
  public message: string;
  public expected: Expectation[];
  public found: string | null;
  public location: FileRange;
  public name: string;
  constructor(
    message: string,
    expected: Expectation[],
    found: string | null,
    location: FileRange
  );
  format(
    sources: {
      source?: any;
      text: string;
    }[]
  ): string;
}

export interface TraceEvent {
  type: string;
  rule: string;
  result?: any;
  location: FileRange;
}

declare class _DefaultTracer {
  private indentLevel: number;
  public trace(event: TraceEvent): void;
}

peggyParser.SyntaxError.prototype.name = "PeggySyntaxError";

export interface ParseOptions {
  filename?: string;
  startRule?: "Word";
  tracer?: any;
  [key: string]: any;
}
export type ParseFunction = <Options extends ParseOptions>(
  input: string,
  options?: Options
) => Options extends { startRule: infer StartRule }
  ? StartRule extends "Word"
    ? Word
    : Word
  : Word;
export const parse: ParseFunction = peggyParser.parse;

export const PeggySyntaxError =
  peggyParser.SyntaxError as typeof _PeggySyntaxError;

export type PeggySyntaxError = _PeggySyntaxError;

// These types were autogenerated by ts-pegjs
export type Word = Syllable[];
export type Syllable =
  | { stress: true | undefined; parts: [Consonant, string] }
  | { stress: true | undefined; parts: [Consonant, (Diphthong | Vowel) | null] }
  | { stress: true | undefined; parts: [null, string] }
  | { stress: true | undefined; parts: [null, Diphthong] }
  | { stress: true | undefined; parts: [null, Vowel] };
export type SyllableEnding = string;
export type Consonant =
  | "b"
  | "t\u0283"
  | "t\u0279"
  | "t"
  | "kw"
  | "k"
  | "z"
  | "\u0279"
  | "s"
  | "m"
  | "f"
  | "\u0261"
  | "n"
  | "\u026b"
  | "w"
  | "p"
  | "\u03b8"
  | "v"
  | "h"
  | "\u014b"
  | "\u0283"
  | "\u0292"
  | "d\u0292"
  | "d"
  | "\u00f0";
export type EndingConsonant =
  | "b"
  | string
  | "k"
  | "m"
  | "\u0261"
  | "\u025b"
  | "n"
  | "e"
  | "p"
  | "h"
  | "\u014b";
export type Diphthong =
  | "o\u028a"
  | "e\u026a"
  | "a\u026a"
  | "a\u028a"
  | "ju"
  | "j\u0259"
  | "j\u00e6"
  | "j\u0251"
  | "j\u028a"
  | "j\u025b"
  | "j\u026a"
  | "j\u0254"
  | "ji"
  | "jo\u028a"
  | "ja\u028a"
  | "je\u026a"
  | "\u0259j";
export type Vowel =
  | "a"
  | "\u028a"
  | "\u0259"
  | "\u0254"
  | "u"
  | "\u026a"
  | "o"
  | "\u025b"
  | "e"
  | "i"
  | "\u0251"
  | "\u025d"
  | "\u00e6"
  | "j";
